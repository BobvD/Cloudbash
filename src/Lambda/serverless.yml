# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: cloudbash
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: dotnetcore2.1
  stage: dev
  region: us-east-1

  iamRoleStatements:
  # Grant privileges to read from kinesis stream
  - Effect: Allow
    Action:
    - kinesis:GetRecords
    - kinesis:GetShardIterator
    - kinesis:DescribeStream
    - kinesis:ListStreams
    - kinesis:PutRecord
    - kinesis:PutRecords
    Resource:
      Fn::GetAtt: 
      - eventStream
      - Arn
  # Grant privilege to write to events table 
  - Effect: Allow
    Action:
    - dynamodb:PutItem
    Resource:
      Fn::GetAtt: 
      - eventsTable
      - Arn     


package:
  artifact: bin/release/netcoreapp2.1/deploy-package.zip

functions:
  createConcert:
    handler: Cloudbash.Lambda::Cloudbash.Lambda.Functions.Concerts.CreateConcertFunction::Run
    events:
    - http:
        path: concerts
        method: post
        cors: true

  ## lambda for catching events from the eventstream (kinesis)
  eventStreamHandler:
    handler: Cloudbash.Lambda::Cloudbash.Lambda.Events.Functions.EventProcessorFunction::Run

# Resources
resources:
  Resources:
    # create the Kinesis EventStream
    eventStream: 
      Type: AWS::Kinesis::Stream
      Properties: 
        Name: eventStream
        ShardCount: 1


    eventsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: eventlog
        AttributeDefinitions:
          - AttributeName: key
            AttributeType: S
        KeySchema:
          - AttributeName: key
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 5


    Event:
      Type: AWS::Lambda::EventSourceMapping
      Properties:
        BatchSize: 50
        EventSourceArn:
          Fn::GetAtt:
            - eventStream
            - Arn      
        FunctionName:
          Fn::GetAtt:
            - EventStreamHandlerLambdaFunction
            - Arn
        StartingPosition: TRIM_HORIZON